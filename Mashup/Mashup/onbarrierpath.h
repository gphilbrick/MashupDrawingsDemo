#ifndef MASHUP_ONBARRIERPATH_H
#define MASHUP_ONBARRIERPATH_H

#include <Core/model/polyline.h>

#include <functional>

namespace mashup {

/// A path running along the sides of 'Stroke's, generated by
/// 'StrokeSegCollider'.
struct OnBarrierPath
{
    size_t length() const;
    void clear();

    /// 'i' identifies a position on the path (an index of 'pos'/'normal').
    /// Return value not normalized
    core::model::Pos dir( size_t i ) const;

    /// Extract a polyline from 'obp' starting at 'startIdx', moving up or down index-wise as per 'increaseIdx', and ending
    ///     (1) upon reaching the end of 'obp' if 'obp' is not closed
    ///     (2) upon making a circuit of 'obp' if 'obp' is closed
    ///     (3) upon 'lastSeg' returning true (and setting the last position in 'ret' in its third parameter).
    ///             'lastSeg' takes the next segment from 'this' (point A, point B) and then last-pos-store param.
    core::model::Polyline extractPolyline(
        size_t startIdx,
        bool increaseIdx,
        std::function< bool( const core::model::Pos&, const core::model::Pos&, core::model::Pos& ) > lastSeg ) const;

    /// same size
    core::model::Polyline pos;
    core::model::Polyline normal;

    /// If true, then assume that a segment connects the front and back of 'pos'.
    /// (Do not expect front/back of 'pos' to be equal in this case.)
    bool closed = false;
};

} // mashup

#endif // #include
